name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
  JAVA_VERSION: '17'
  PYTHON_VERSION: '3.9'

jobs:
  # Android Build and Test Job
  android-build-test:
    name: Android Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Build Android project
      run: ./gradlew AndroidApp:assembleDebug --stacktrace
      
    - name: Run Android unit tests
      run: ./gradlew AndroidApp:testDebugUnitTest --stacktrace
      
    - name: Run Android lint
      run: ./gradlew AndroidApp:lintDebug --stacktrace
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Android Unit Tests
        path: AndroidApp/build/test-results/testDebugUnitTest/*.xml
        reporter: java-junit
        
    - name: Upload Android build artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: android-build-artifacts
        path: |
          AndroidApp/build/outputs/apk/debug/*.apk
          AndroidApp/build/reports/
        retention-days: 7

  # Android Integration Test Job
  android-integration-test:
    name: Android Integration Tests
    runs-on: macos-latest
    needs: android-build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Android instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: default
        arch: x86_64
        profile: Nexus 6
        script: ./gradlew AndroidApp:connectedDebugAndroidTest --stacktrace
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-integration-test-results
        path: AndroidApp/build/reports/androidTests/connected/
        retention-days: 7

  # Python Build and Test Job
  python-build-test:
    name: Python Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set up JDK ${{ env.JAVA_VERSION }} (for Gradle Python plugin)
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('PythonApp/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Grant execute permission for gradlew (Unix)
      if: runner.os != 'Windows'
      run: chmod +x gradlew
      
    - name: Install Python dependencies
      run: ./gradlew PythonApp:pipInstall
      shell: bash
      
    - name: Test Python environment setup
      run: ./gradlew PythonApp:testPythonSetup
      shell: bash
      
    - name: Run Python unit tests
      run: ./gradlew PythonApp:runPythonTests
      shell: bash
      
    - name: Run Python tests with coverage
      run: ./gradlew PythonApp:runPythonTestsWithCoverage
      shell: bash
      
    - name: Run Python code quality checks
      run: ./gradlew PythonApp:runPythonLinting
      shell: bash
      continue-on-error: true
      
    - name: Run Python type checking
      run: ./gradlew PythonApp:runPythonTypeCheck
      shell: bash
      continue-on-error: true
      
    - name: Upload Python test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: python-test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          PythonApp/htmlcov/
          PythonApp/.coverage
        retention-days: 7

  # Build Validation Job
  build-validation:
    name: Build System Validation
    runs-on: windows-latest
    needs: [android-build-test, python-build-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Run build validation script
      run: .\scripts\validate-build.ps1
      shell: powershell
      
    - name: Test complete build process
      run: .\gradlew build --stacktrace
      shell: cmd
      
    - name: Upload build validation results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: build-validation-results
        path: |
          build/reports/
          AndroidApp/build/reports/
        retention-days: 7

  # Security Scan Job
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: android-build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Release Job (only on main branch)
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [android-integration-test, python-build-test, build-validation]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build release APK
      run: ./gradlew AndroidApp:assembleRelease --stacktrace
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      if: env.KEYSTORE_FILE != ''
      with:
        releaseDirectory: AndroidApp/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          AndroidApp/build/outputs/apk/release/*.apk
        body: |
          ## Changes in this Release
          - Automated release from CI/CD pipeline
          - Build number: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}