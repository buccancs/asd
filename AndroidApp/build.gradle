plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.multisensor.recording'
    compileSdk 34

    defaultConfig {
        applicationId "com.multisensor.recording"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.multisensor.recording.CustomTestRunner"
        
        // NDK configuration for 16 KB page size compatibility
        ndk {
            // Ensure native libraries are built with proper alignment for 16 KB page sizes
            // This addresses the LOAD segments alignment issue for Google Play compliance
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    packaging {
        resources {
            pickFirsts += "META-INF/LICENSE.md"
            pickFirsts += "META-INF/LICENSE-notice.md"
            // Exclude duplicate kotlinx-coroutines-core files
            excludes += "META-INF/kotlinx-coroutines-core.kotlin_module"
            // You can also exclude other common conflicting files
            // pickFirsts += "META-INF/NOTICE.md"
            // pickFirsts += "META-INF/DEPENDENCIES"
        }
        
        // 16 KB page size compatibility for native libraries
        jniLibs {
            // Ensure native libraries are properly aligned for 16 KB page sizes
            // This is required for Google Play compliance starting November 1st, 2025
            useLegacyPackaging = false
            // Keep native libraries compressed to ensure proper alignment
            keepDebugSymbols += "**/*.so"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "BUILD_TYPE", '"debug"'
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BUILD_TYPE", '"release"'
        }
        
        staging {
            initWith debug
            debuggable false
            buildConfigField "String", "BUILD_TYPE", '"staging"'
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }
    
    flavorDimensions "environment"
    productFlavors {
        dev {
            dimension "environment"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "String", "ENVIRONMENT", '"development"'
        }
        
        prod {
            dimension "environment"
            buildConfigField "String", "ENVIRONMENT", '"production"'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    // Additional build options for 16 KB page size compatibility
    buildTypes.configureEach {
        // Ensure native libraries are built with proper alignment
        // This helps address LOAD segment alignment issues for 16 KB page sizes
        ndk {
            debugSymbolLevel 'SYMBOL_TABLE'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                // Enhanced Windows compatibility configuration
                // JVM arguments for module access and headless operation
                jvmArgs '-Djava.awt.headless=true',
                        '-Dfile.encoding=UTF-8',
                        '-Duser.timezone=UTC',
                        '-Djava.security.manager=allow',
                        '--add-opens=java.base/java.lang=ALL-UNNAMED',
                        '--add-opens=java.base/java.util=ALL-UNNAMED',
                        '--add-opens=java.base/java.io=ALL-UNNAMED',
                        '--add-opens=java.base/java.nio.file=ALL-UNNAMED',
                        '--add-opens=java.base/java.nio.file.attribute=ALL-UNNAMED',
                        '--add-opens=java.base/java.nio.file.spi=ALL-UNNAMED',
                        '--add-opens=java.base/sun.nio.fs=ALL-UNNAMED'

                // Robolectric configuration for Windows compatibility
                systemProperty 'java.io.tmpdir', System.getProperty('java.io.tmpdir')
                systemProperty 'robolectric.logging.enabled', 'true'
                systemProperty 'robolectric.offline', 'false'
                systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2'
                systemProperty 'robolectric.dependency.repo.id', 'central'
                systemProperty 'robolectric.useWindowsCompatibleTempDir', 'true'

                // Windows POSIX permissions compatibility
                // These properties help resolve the Google Guava Files.createTempDir() POSIX permissions issue
                systemProperty 'java.nio.file.spi.DefaultFileSystemProvider', 'sun.nio.fs.WindowsFileSystemProvider'
                systemProperty 'java.nio.file.spi.FileSystemProvider.installedProviders', 'sun.nio.fs.WindowsFileSystemProvider'
                systemProperty 'sun.nio.fs.useCanonicalPrefixCache', 'false'
                systemProperty 'sun.nio.fs.useCanonicalCache', 'false'
                systemProperty 'com.google.common.io.Files.createTempDir.avoidPosix', 'true'
            }
        }
    }
}

dependencies {
    // Core & UI Components
    implementation libs.bundles.core.ui
    
    // Settings and Preferences - Milestone 2.7 UI Enhancement
    implementation 'androidx.preference:preference-ktx:1.2.1'

    // Architecture - Lifecycle, Coroutines, Permissions
    implementation libs.bundles.lifecycle
    implementation libs.kotlinx.coroutines.android
    implementation libs.bundles.activity.fragment

    // Enhanced Permission Handling
    implementation libs.xxpermissions

    // CameraX
    implementation libs.bundles.camera

    // Dependency Injection
    implementation libs.hilt.android
    ksp libs.hilt.compiler

    // Networking & Serialization
    implementation libs.bundles.networking

    // Unit Testing
    testImplementation libs.bundles.unit.testing

    // Hilt Testing
    testImplementation libs.hilt.android.testing
    kspTest libs.hilt.compiler

    // Android (Instrumented) Testing
    androidTestImplementation libs.bundles.integration.testing

    // Hilt Integration Testing
    androidTestImplementation libs.hilt.android.testing
    kspAndroidTest libs.hilt.compiler

    // Shimmer SDK dependencies
    implementation files('libs/shimmerandroidinstrumentdriver-3.2.3_beta.aar')
    implementation files('libs/shimmerbluetoothmanager-0.11.4_beta.jar')
    implementation files('libs/shimmerdriver-0.11.4_beta.jar')
    implementation files('libs/shimmerdriverpc-0.11.4_beta.jar')
    
    // Topdon thermal camera SDK dependencies
    implementation files('libs/topdon_1.3.7.aar')
    implementation files('libs/libusbdualsdk_1.3.4_2406271906_standard.aar')
    implementation files('libs/opengl_1.3.2_standard.aar')
    implementation files('libs/suplib-release.aar')
}
